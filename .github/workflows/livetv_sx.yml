name: Scrape LiveTV.sx Events

on:
  schedule:
    # Ejecuta cada hora (en el minuto 0 de cada hora)
    - cron: '0 */1 * * *'
  workflow_dispatch: # Permite la ejecución manual desde la pestaña Actions

permissions:
  contents: write # Necesario para hacer commit de los cambios al repositorio

jobs:
  scrape-and-commit:
    runs-on: ubuntu-latest # O el sistema operativo de tu runner (ubuntu-latest es común y funciona bien)

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4 # Paso para clonar tu repositorio

      - name: Set up Python
        uses: actions/setup-python@v5 # Configura el entorno Python
        with:
          python-version: '3.11' # Usa la versión de Python que prefieras (3.11 está bien)

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip # Asegura que pip esté actualizado
          pip install requests beautifulsoup4 lxml # Tus dependencias actuales (requests se mantiene por si acaso)
          # --- ¡AQUÍ ESTÁN LOS CAMBIOS IMPORTANTES! ---
          pip install playwright # Instala el paquete Python de Playwright
          playwright install     # Instala los binarios de los navegadores para Playwright (MUY IMPORTANTE)
          # --- FIN DE LOS CAMBIOS IMPORTANTES ---
        env:
          # Opcional pero recomendado: para controlar dónde Playwright instala los navegadores
          # y evitar problemas con permisos o limpieza de caché en el runner.
          PLAYWRIGHT_BROWSERS_PATH: ${{ github.workspace }}/ms-playwright-browsers 

      - name: Run scraping script
        run: python script_lista_livetv_sx.py # El nombre de tu script

      - name: Commit and push if XML changed
        # Este paso está bien y se encarga de guardar el XML actualizado.
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add ${{ env.XML_FILENAME }}
          # Comprueba si hay cambios para hacer commit
          if git diff --staged --quiet; then
            echo "No changes to commit in ${{ env.XML_FILENAME }}."
          else
            git commit -m "Automated update of event URLs in ${{ env.XML_FILENAME }}"
            git push
            echo "${{ env.XML_FILENAME }} updated and pushed."
          fi
        env:
          XML_FILENAME: eventos_livetv_sx.xml # El nombre de tu archivo XML
