name: Scrape LiveTV Events

on:
  schedule:
    - cron: '0 */12 * * *'  # Ejecuta cada 12 horas
  workflow_dispatch:  # Permite ejecución manual

jobs:
  scrape:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        fetch-depth: 0  # Obtiene todo el historial para evitar conflictos

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        cache: 'pip'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install requests beautifulsoup4 lxml

    - name: Run scraper
      run: |
        echo "Iniciando proceso de scraping..."
        python script_lista_livetv_sx.py
        echo "Proceso de scraping completado."

    - name: Check for changes
      id: verify-changes
      run: |
        if git diff --quiet eventos_livetv_sx.xml; then
          echo "No hay cambios en los datos de eventos."
          echo "changes=false" >> $GITHUB_OUTPUT
        else
          echo "Se han detectado cambios en los datos de eventos."
          echo "changes=true" >> $GITHUB_OUTPUT
        fi

    - name: Commit and push changes
      if: steps.verify-changes.outputs.changes == 'true'
      run: |
        git config --local user.email "github-actions@github.com"
        git config --local user.name "GitHub Actions"
        
        # Hacer pull para obtener los últimos cambios del remoto
        git pull origin main --rebase || git pull origin main
        
        # Agregar y hacer commit de los cambios
        git add eventos_livetv_sx.xml
        git commit -m "Update sport events data [$(date +'%Y-%m-%d %H:%M:%S')]"
        
        # Intentar push con reintentos en caso de conflicto
        for i in {1..3}; do
          if git push origin main; then
            echo "Push exitoso en intento $i"
            break
          else
            echo "Push falló en intento $i, reintentando..."
            git pull origin main --rebase || git pull origin main
            if [ $i -eq 3 ]; then
              echo "Error: No se pudo hacer push después de 3 intentos"
              exit 1
            fi
            sleep 5
          fi
        done
